var documenterSearchIndex = {"docs":
[{"location":"1_introduction_problems/#Exercises","page":"Exercises","title":"Exercises","text":"","category":"section"},{"location":"1_introduction_problems/#List-of-exercises","page":"Exercises","title":"List of exercises","text":"","category":"section"},{"location":"1_introduction_problems/#:-Timescales-of-stellar-evolution","page":"Exercises","title":"1: Timescales of stellar evolution","text":"","category":"section"},{"location":"1_introduction_problems/","page":"Exercises","title":"Exercises","text":"There are three main timescales in which stars evolve. These are the dynamical, thermal and nuclear timescales. Even without knowing the equations of stellar structure and evolution we can do some estimates on the value of these quantities. Compute these without a calculator! We only care about the order of magnitude of these timescales, which given all the approximations done is all we can do. For solar properties, use the following for the mass, radius and luminosity:","category":"page"},{"location":"1_introduction_problems/","page":"Exercises","title":"Exercises","text":"R_odotsim 7times 10^10mathrmcmquad M_odot sim 2times 10^33mathrmgquad L_odot sim 4times 10^33mathrmergs^-1","category":"page"},{"location":"1_introduction_problems/","page":"Exercises","title":"Exercises","text":"Thermal timescale: One of the main early hypothesis to explain the energy source of the Sun was that it originated from its slow contraction into its own gravitational potential. In such a case, a rough estimate of the energy the Sun would have radiated through its life is given by the negative of the gravitational potential energy E_mathrmg:\nE_mathrmg sim displaystyle -fracGM_odot^2R_odot\nAssuming that the luminosity of the Sun has always been its current one, L_odot, compute the age of the Sun under the assumption that it is only powered by contraction.\nDynamical timescale: For most of their lives stars are very close to hydrostatic equilibrium, carefully balancing their gravities against the support of a pressure gradient. Whenever these two forces are misbalanced, the star will evolve in what is known as the dynamical timescale. Estimate this timescale by computing the time it would take for the surface of the sun to free-fall all the way to its center if all forces opposing gravity would be removed. For simplicity assume that the gravitational acceleration is constant and equal to its present one.\nNuclear timescale: As we now know, most stars are powered by nuclear reactions. Masses of isotopes are normally given in terms of the atomic mass unit m_mathrmu=1661times 10^-24mathrmg, defined as 112 of the mass of a carbon-12 atom. The mass of a hydrogen atom is m_mathrmH=1007825m_mathrmu and that of a helium atom is m_mathrmHe=4002602 m_mathrmu, such that if four hydrogen atoms are fused into a helium atom there is a mass deficit leading to a release of energy (4m_mathrmH-m_mathrmHe)c^2sim 4times 10^-5mathrmerg. With this information, estimate the lifetime of the Sun as a core-hydrogen burning star. For simplicity, assume the Sun has a constant luminosity and is entirely composed of hydrogen, 10% of which is burned into Helium during core-hydrogen burning.","category":"page"},{"location":"1_introduction_problems/#Solutions","page":"Exercises","title":"Solutions","text":"","category":"section"},{"location":"1_introduction_problems/#:-Timescales-of-stellar-evolution-2","page":"Exercises","title":"1: Timescales of stellar evolution","text":"","category":"section"},{"location":"1_introduction_problems/","page":"Exercises","title":"Exercises","text":"TBD","category":"page"},{"location":"1_introduction_julia/#Julia-setup","page":"Julia setup","title":"Julia setup","text":"","category":"section"},{"location":"1_introduction_julia/","page":"Julia setup","title":"Julia setup","text":"This class will include computational examples that are programmed in the julia programming language. Julia is a JIT (just-in-time) language which allows to write very fast code (very close to the performance of compiled languages like C and Fortran), while still having the simplicity of an interpreted language like python. Each of the examples included in this website can be downloaded as jupyter notebooks. The instructions below explain how to run these notebooks both in Linux and Windows systems.","category":"page"},{"location":"1_introduction_julia/#Linux","page":"Julia setup","title":"Linux","text":"","category":"section"},{"location":"1_introduction_julia/#Download-Julia","page":"Julia setup","title":"Download Julia","text":"","category":"section"},{"location":"1_introduction_julia/","page":"Julia setup","title":"Julia setup","text":"Get the version of julia that matches your system from the downloads page. Below instructions assume that:","category":"page"},{"location":"1_introduction_julia/","page":"Julia setup","title":"Julia setup","text":"The version you downloaded is julia-1.9.3-linux-x86_64.tar.gz\nIt was downloaded to your home folder, which should be something like /home/USERNAME.","category":"page"},{"location":"1_introduction_julia/","page":"Julia setup","title":"Julia setup","text":"You will need to adapt the commands below if that is not the case.","category":"page"},{"location":"1_introduction_julia/","page":"Julia setup","title":"Julia setup","text":"In a terminal, uncompress the file that has been downloaded by running the following commands:","category":"page"},{"location":"1_introduction_julia/","page":"Julia setup","title":"Julia setup","text":"# Move to the home directory\ncd ~\n# Uncompress the .tar.gz\ntar zxvf julia-1.9.3-linux-x86_64.tar.gz","category":"page"},{"location":"1_introduction_julia/","page":"Julia setup","title":"Julia setup","text":"This will create a folder called julia-1.9.3 in /home/USERNAME. You can find your executable in /home/USERNAME/julia-1.9.3/bin/julia.","category":"page"},{"location":"1_introduction_julia/#Setup-Julia","page":"Julia setup","title":"Setup Julia","text":"","category":"section"},{"location":"1_introduction_julia/","page":"Julia setup","title":"Julia setup","text":"Julia can be started by running the executable, however using the full path to it is cumbersome. We can instead create an alias that will let us run the executable faster. This can be done by editing (or creating if it does not exist) the .bashrc file, which containts a set of commands that are run at the start of each terminal session. To edit the .bashrc file, I am going to use the nano text editor, but you can use your favorite text editor.","category":"page"},{"location":"1_introduction_julia/","page":"Julia setup","title":"Julia setup","text":"# Open the .bashrc file\nnano ~/.bashrc","category":"page"},{"location":"1_introduction_julia/","page":"Julia setup","title":"Julia setup","text":"Copy and paste the following line at the bottom of the file:","category":"page"},{"location":"1_introduction_julia/","page":"Julia setup","title":"Julia setup","text":"alias julia=/home/USERNAME/julia-1.9.3/bin/julia","category":"page"},{"location":"1_introduction_julia/","page":"Julia setup","title":"Julia setup","text":"To save changes and exit from nano, you'll have to press ctrl+X , then Y to accept to save the modified buffer and then enter. Now, everytime you'll open a shell, you'll be able to call Julia by simply typing in a terminal","category":"page"},{"location":"1_introduction_julia/","page":"Julia setup","title":"Julia setup","text":"#Open Julia\njulia","category":"page"},{"location":"1_introduction_julia/","page":"Julia setup","title":"Julia setup","text":"Try it and see the greeting message üòÅ","category":"page"},{"location":"1_introduction_julia/","page":"Julia setup","title":"Julia setup","text":"(Image: )","category":"page"},{"location":"1_introduction_julia/#Setup-the-Julia-notebook","page":"Julia setup","title":"Setup the Julia notebook","text":"","category":"section"},{"location":"1_introduction_julia/","page":"Julia setup","title":"Julia setup","text":"We want to get the Julia notebook now, to be able to execute an .ipynb file. It is also recommended to create a unique environment for each julia project you work with, this lets you install specific dependencies for different projects, avoid conflicts, and make your calculations reproducible (this is similar to conda environments in case you're familiar with those). Within Julia, type the following in your terminal:","category":"page"},{"location":"1_introduction_julia/","page":"Julia setup","title":"Julia setup","text":"# Open up the package manager\n]\n# create a local environment\nactivate .\n# Install the Julia notebook package\nadd IJulia","category":"page"},{"location":"1_introduction_julia/","page":"Julia setup","title":"Julia setup","text":"The installation of the notebook should take a few minutes. At the end, press ctrl+C to go out of the package manager. Within Julia, type","category":"page"},{"location":"1_introduction_julia/","page":"Julia setup","title":"Julia setup","text":"# Declare that you'll use the Julia notebook package\nusing IJulia\n# Call the Julia notebook package\nnotebook()","category":"page"},{"location":"1_introduction_julia/","page":"Julia setup","title":"Julia setup","text":"If you're asked to install Jupyter via Conda, accept by pressing Y+enter. This should get you Jupyter notebook, the web-based computing platform that will run your Julia notebooks in your favorite browser. This installation should also take a few minutes.","category":"page"},{"location":"1_introduction_julia/#Open-up-your-notebook","page":"Julia setup","title":"Open up your notebook","text":"","category":"section"},{"location":"1_introduction_julia/","page":"Julia setup","title":"Julia setup","text":"Once Jupyter is launched, you should see a window popping up in your favorite browser. That window is going to show you an interactive platform that lists all your files in your HOME_DIR. Something like this:","category":"page"},{"location":"1_introduction_julia/","page":"Julia setup","title":"Julia setup","text":"(Image: )","category":"page"},{"location":"1_introduction_julia/","page":"Julia setup","title":"Julia setup","text":"At this point, you just need to find the .ipynb file you downloaded into your favorite directory in the first step. Open it, and the game is done ‚úÖ","category":"page"},{"location":"1_introduction_julia/#Windows","page":"Julia setup","title":"Windows","text":"","category":"section"},{"location":"1_introduction_julia/#Download-Julia-2","page":"Julia setup","title":"Download Julia","text":"","category":"section"},{"location":"1_introduction_julia/","page":"Julia setup","title":"Julia setup","text":"Get the version of julia that matches your system from the downloads page. Below instructions assume that the version you downloaded is julia-1.9.3-win64.exe. You will need to adapt the commands below if that is not the case.","category":"page"},{"location":"1_introduction_julia/","page":"Julia setup","title":"Julia setup","text":"Run the installer you just downloaded, by double clicking on the executable and giving permissions to install Julia in the suggested installation directory. Be sure to check the box asking you to \"Add Julia to path\", because it will automatically add Julia to Environment Variables of your system! See screenshot below:","category":"page"},{"location":"1_introduction_julia/","page":"Julia setup","title":"Julia setup","text":"(Image: )","category":"page"},{"location":"1_introduction_julia/#Open-up-Julia","page":"Julia setup","title":"Open up Julia","text":"","category":"section"},{"location":"1_introduction_julia/","page":"Julia setup","title":"Julia setup","text":"To open Julia we need to open a terminal, a command-line interface to communicate directly with your computer. To do so in your Windows machine, you'll need to press the shortcut Windows+R to launch the \"Run\" box; afterwards, type ‚Äúcmd‚Äù and then click ‚ÄúOK‚Äù to open the Command Prompt (see screenshot below).  Invoke Julia by simply typing julia and see the greeting message üòÅ ","category":"page"},{"location":"1_introduction_julia/","page":"Julia setup","title":"Julia setup","text":"# Open Julia\njulia","category":"page"},{"location":"1_introduction_julia/","page":"Julia setup","title":"Julia setup","text":"(Image: )","category":"page"},{"location":"1_introduction_julia/#Setup-the-Julia-notebook-2","page":"Julia setup","title":"Setup the Julia notebook","text":"","category":"section"},{"location":"1_introduction_julia/","page":"Julia setup","title":"Julia setup","text":"Once Julia is open and welcomes you, the steps to get the Julia notebook are more or less the same as you would do in Linux. Just as with linux, it is recommended to use individual environments for each project you have. Within Julia, type the following in your terminal:","category":"page"},{"location":"1_introduction_julia/","page":"Julia setup","title":"Julia setup","text":"# Open up the package manager\n]\n# create a local environment\nactivate .\n# Install the Julia notebook package\nadd IJulia","category":"page"},{"location":"1_introduction_julia/","page":"Julia setup","title":"Julia setup","text":"The installation of the notebook should take a few minutes. At the end, press ctrl+C to go out of the package manager. Within Julia, type","category":"page"},{"location":"1_introduction_julia/","page":"Julia setup","title":"Julia setup","text":"# Declare that you'll use the Julia notebook package\nusing IJulia\n# Call the Julia notebook package\nnotebook()","category":"page"},{"location":"1_introduction_julia/","page":"Julia setup","title":"Julia setup","text":"If you are asked to install Jupyter via Conda, accept by pressing Y+enter. This should get you Jupyter notebook, the web-based computing platform that will run your Julia notebooks in your favorite browser. This installation should also take a few minutes.","category":"page"},{"location":"1_introduction_julia/#Open-up-your-notebook-2","page":"Julia setup","title":"Open up your notebook","text":"","category":"section"},{"location":"1_introduction_julia/","page":"Julia setup","title":"Julia setup","text":"Once Jupyter is launched, you should see a window popping up in your favorite browser. That window is going to show you a file explorer. Something like this:","category":"page"},{"location":"1_introduction_julia/","page":"Julia setup","title":"Julia setup","text":"(Image: )","category":"page"},{"location":"1_introduction_julia/","page":"Julia setup","title":"Julia setup","text":"At this point, you just need to find the .ipynb file you downloaded into your favorite directory in the first step. Open it, and the game is done ‚úÖ","category":"page"},{"location":"1_introduction_julia/#Julia-Basics","page":"Julia setup","title":"Julia Basics","text":"","category":"section"},{"location":"1_introduction_julia/","page":"Julia setup","title":"Julia setup","text":"All computational examples will be shown using the julia programming language, but the code provided can be easily translated to other languages such as python. The main benefit of julia is that it is a language that is simple to write but can still have a performance comparable to traditional compiled languages. A good overview of the language can be found in the official manual, but below we show some of the basic functionality that you will need to use.","category":"page"},{"location":"1_introduction_julia/","page":"Julia setup","title":"Julia setup","text":"First of all, we illustrate the basic usage of julia. A normal thing you will do at the beginning of any notebook or program is to include packages. Our life is made significantly easier by people who provide these packages! To do this, one makes use of the using keyword. Below we include the packages we will be using in this example.","category":"page"},{"location":"1_introduction_julia/","page":"Julia setup","title":"Julia setup","text":"using DataFrames     # Used to deal with tabular data\nusing Plots          # Provides a multitude of plotting routines\nusing CSV            # Efficient reading of files in \"comma separated values\" format\nusing LaTeXStrings   # Makes it easy to write LaTeX strings","category":"page"},{"location":"1_introduction_julia/","page":"Julia setup","title":"Julia setup","text":"Whenever you work on a fresh environment you will find the above code fails, as the packages are not installed. As described in the error message you can correct this by running (in a different cell) import Pkg; Pkg.add(\"DataFrames\"), and similarly for the other packages. Once this is done for a package, it will remain installed in your environment, and you don't need to use Pkg.add again (it is safe to erase the cells with that command).","category":"page"},{"location":"1_introduction_julia/","page":"Julia setup","title":"Julia setup","text":"The syntax of julia should be familiar to those with a python background. Assigning numerical variables and performing arithmetic operations on them is straightforward.","category":"page"},{"location":"1_introduction_julia/","page":"Julia setup","title":"Julia setup","text":"a = 2.0\nb = pi # the definition of pi is included by default\n\nc = a+b # addition\nd = b^a # exponentiation\ne = sin(b) # basic mathematical functions are also defined in the language, no need to include a package\n\nprint(\"c=$(c), b=$(d), c=$(e)\") # $() notation is used to read the value in parenthesis into the string","category":"page"},{"location":"1_introduction_julia/","page":"Julia setup","title":"Julia setup","text":"Œ≤=1;  # Using ';' at the end of a line will hide its output","category":"page"},{"location":"1_introduction_julia/","page":"Julia setup","title":"Julia setup","text":"You also have access to basic keywords for control flow, including if blocks and for loops. Here some small notational variations arise with respect to python. Blocks of code are not defined by indentation but by the use of the end keyword.","category":"page"},{"location":"1_introduction_julia/","page":"Julia setup","title":"Julia setup","text":"a = 1\nb = 3\n\nif a < 2 && b < 2   # && stands for 'and'\n    print(\"if was successful\")\nelseif a < 2 || b < 2   # || stands for 'or'\n    print(\"elseif was successful\")\nelse\n    printf(\"Neither if or elseif were successful\")\nend\nprint(\"\\n\") # print a line break\n\n# Add up all digits between 1 and 10 using a for loop\nsumnumbers = 0\nfor i in 1:10\n   global sumnumbers = sumnumbers+i # global keyword is to refer to scope outside of for loop\nend\nprint(\"Adding all numbers between 1 and 10 gives us $(sumnumbers)\")","category":"page"},{"location":"1_introduction_julia/","page":"Julia setup","title":"Julia setup","text":"We can also define functions using the function keyword.","category":"page"},{"location":"1_introduction_julia/","page":"Julia setup","title":"Julia setup","text":"function add1(x)\n    return x+1\nend\n\nadd1(1)","category":"page"},{"location":"1_introduction_julia/","page":"Julia setup","title":"Julia setup","text":"We often deal not just with scalars but also vectors or matrices. We can define a vector covering a range of values using the LinRange function.","category":"page"},{"location":"1_introduction_julia/","page":"Julia setup","title":"Julia setup","text":"xvals = LinRange(-5.0,5.0,11) # Create a vector with elements from -5.0 to 5.0 with 11 elements.","category":"page"},{"location":"1_introduction_julia/","page":"Julia setup","title":"Julia setup","text":"Contrary to python, arrays in julia start at position 1, so if you attempt to access xvals[0] you will get an error.","category":"page"},{"location":"1_introduction_julia/","page":"Julia setup","title":"Julia setup","text":"Beware that many operations on vectors will not work as you might naively expect. If you try computing xvals^2, an error will be thrown as the ^ operation is not defined between a vector and an integer. You could think that the above operation is ambiguous, do we mean that we want to take the square of each element of the vector or instead that we want to take the dot product of xvals with itself? To explicitly state that an operation is meant to be done element by element, one can use a . before the operation. Further information on this notation can be found here.","category":"page"},{"location":"1_introduction_julia/","page":"Julia setup","title":"Julia setup","text":"xvals.^2","category":"page"},{"location":"1_introduction_julia/","page":"Julia setup","title":"Julia setup","text":"This can be done with any function. For instance the code below will apply our add1 function to each element of the array.","category":"page"},{"location":"1_introduction_julia/","page":"Julia setup","title":"Julia setup","text":"add1.(xvals)","category":"page"},{"location":"1_introduction_julia/","page":"Julia setup","title":"Julia setup","text":"Finally, the Plots package allows us to easily make different kinds of plots. The example below shows a (sparsely) sampled plot of sine and cosine. The plot can be created by calling the plot(...) function, while things are added to it by calling the plot!() function. Using ! as part of a function name is part of the style guide of julia to identify functions which modify their arguments. For example, the sort(x) function will return a copy of the vector x which is sorted, while sort!(x) will modify the vector x into a sorted version of itself (known as in place sorting).","category":"page"},{"location":"1_introduction_julia/","page":"Julia setup","title":"Julia setup","text":"yvals = sin.(xvals)\nyvals2 = cos.(xvals)\n# The LaTeX strings package allows us to write LaTeX without needing to escape backslashes\n# (i.e., we can write L\"\\sin(x)\" instead of \"$\\\\sin(x)$\").\nplot(xlabel=L\"$x$\", ylabel=L\"$y$\") \nplot!(xvals, yvals, label=L\"$\\sin(x)$\")\nplot!(xvals, yvals2, label=L\"$\\cos(x)$\",linestyle=:dash)","category":"page"},{"location":"#Overview","page":"Overview","title":"Overview","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"Welcome to the 2023 rendition of the course \"Stellar Structure and Evolution\" at the institute of astronomy of KU Leuven. This website will contain notes from classes, exercises with included solutions, and examples of computational problems. Below you can find links to the different sections of this website that are available at the moment.","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"Pages = [\"1_introduction.md\"]\nDepth = 1","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"EditURL = \"1_introduction_computational.jl\"","category":"page"},{"location":"1_introduction_computational/#Constructing-an-HR-diagram","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"","category":"section"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"# Include imports\nusing DataFrames     # Used to deal with tabular data\nusing Plots          # Provides a multitude of plotting routines\nusing CSV            # Efficient reading of files in \"comma separated values\" format\nusing LaTeXStrings   # Makes it easy to write LaTeX strings","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"To run this lab locally you will need three additional files, solar_spectrum.dat, gaia_100pc_par_over_err_100.csv and passband.dat.","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"The radiation coming out of a star can be approximated to first order using black body radiation. In this case the intensity is described by Planck's law,","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"B_lambda(lambdaT) = frac2h c^2lambda^5frac1expleft(frachclambda k_mathrmBTright)-1","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"which describes the energy flux per unit area and unit solid angle. This function peaks at a value of lambda_mathrmmax=hc(4965 k_mathrmBT). We can use this to normalize the distribution such that its peak value is 1, which is useful for visualization. Below we define both B_lambda and its normalized version.","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"# Define constants and Plank function\nh = 6.6261e-27      # Planck's constant, cm^2 g s^-1\nc = 2.99792458e10   # speed of light cm s^-1\nk_B = 1.3807e-16    # Boltzmann constant erg K-1\nœÉ = 2*œÄ^5*k_B^4/(15*h^3*c^2) # Stefan-Boltzmann constant\nfunction B_Œª(Œª,T) #Œª in nm, T in Kelvin\n    Œª_cm = Œª*1e-7\n    return 2*h*c^2/Œª_cm^5*(1/(exp(h*c/(Œª_cm*k_B*T))-1))\nend;\nfunction normalized_B_Œª(Œª,T) #Œª in nm, T in Kelvin\n    peak_Œª = h*c/(4.965*k_B*T)*1e7 #in nm\n    return B_Œª(Œª,T)/B_Œª(peak_Œª,T)\nend;\nnothing #hide","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"To see what we mean when we say the spectrum of a star resembles that of a black body, we can check a solar spectrum. The flux that would come out of the surface of the sun per unit wavelength can be obtained by integration of B_lambda over a half sphere, with a cos(theta) correction to account for projection effects,","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"F_lambda = int_0^2 pidphiint_0^pi2B_lambda(lambdaT)cos(theta)sin(theta) dtheta dphi=pi B_lambda","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"Integrated over all wavelengths it can be shown that the total flux is given by F=sigma T^4, where sigma is the Stefan-Boltzmann constant. While travelling through vacuum the flux scales as the inverse of the square distance, such that the solar flux observed at Earth can be computed as","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"F_lambdamathrmEarth = pi B_lambda left(fracR_odot1mathrmauright)^2","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"Below we compare this black body prediction to a standard solar spectrum from the National Renewable Energy Laboratory of the US. Here we use a temperature of T_mathrmeff=5772mathrmK for the Sun, which is a standard value defined by the International Astronomical Union.","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"# We read a CSV file into a dataframe. The first line of the file contains the column names\nsolar_spectrum = CSV.read(\"assets/solar_spectrum.dat\", header=1, delim=\" \", ignorerepeated=true, DataFrame)\n\nplot(xlabel=L\"$\\mathrm{Wavelength\\;[nm]}$\", ylabel=L\"$\\mathrm{Flux}\\; [\\mathrm{erg\\;s^{-1}\\;cm^{-2}\\;nm^{-1}}]$\", xlims=[0,2000])\n\nxvals = LinRange(200.0,2000.0,100)\nau = 1.5e13\nRsun = 7e10\nplot!(xvals, pi*B_Œª.(xvals,5772)/1e7/(au/Rsun)^2) # 1e7 factor converts from centimeter to nanometer\nplot!(solar_spectrum.lambda, solar_spectrum.flux) # columns in a dataframe can be easily accesible by name","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"In this exercise we will work with Gaia data. Gaia is a space mission that is performing astrometry of over a billion targets, providing an incredible picture on the structure of our Galaxy. Using parallaxes we can determine the distance to these stars and thus infer their absolute magnitudes. Gaia also provides photometric measurements in three bands, called G, G_RP and G_BP. The G band is a broadband filter, while the G_RP and G_BP filters are more sensitive to short and long wavelengths respectively. The sensitivity of each filter to light at different wavelengths is described by the passbands, which are shown below compared to a (normalized) black body spectrum with the effective temperature of the Sun. For simplicity from here on we refer to the G_RP and G_BP filters as RP and BP.","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"# Visualize Gaia passbands\npassbands = CSV.read(\"assets/passband.dat\", header=1, delim=\" \", ignorerepeated=true, DataFrame)\nplot(xlabel=L\"$\\mathrm{Wavelength\\;[nm]}$\", ylabel=L\"\\mathrm{Transmissivity}\", legendfontsize=10)\nplot!(passbands.lambda, passbands.G_pb, label=L\"$G$\")\nplot!(passbands.lambda, passbands.BP_pb, label=L\"BP\")\nplot!(passbands.lambda, passbands.RP_pb, label=L\"RP\")\n\nxvals = LinRange(200.0,1500.0,100)\nplot!(xvals, normalized_B_Œª.(xvals,5772), label=L\"$T=5772\\;\\mathrm{[K]}$\")","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"The Gaia archive gives us a nice interface to query results from this mission (although queries are limited to 2000 results). Here we read a file gaia_100pc_par_over_err_100.csv that containts a sample of stars within 100 parsecs for which the error in the measured parallax is smaller that 1 of the total. As a quick reminder on what parallax means, it refers to the angular displacement of stars as seen by two different observers. When this angle is taken between two measurements at opposite ends of a circle with a distance of 1mathrmau (so, for an observer on Earth), the parallax p is half the of the angular displacement measured against a background of distant \"fixed\" stars. A parsec corresponds to the distance at which a source has a parallax of 1 ( stands for arcsecond, which corresponds to 1(60times 3600) of a degree). In this way the distance of a source is given by","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"fracd1mathrmpc = frac1p1","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"Knowing the distance we can compute the absolute magnitude M of a star of known apparent magnitude m,","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"M=m-5(log_10d_mathrmpc-1)","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"where d_mathrmpc is the distance to the source in parsecs. Using this, below we read the datafile obtained from the Gaia archive, compute the absolute G magnitude of each object using the distance obtained from the parallax (note that the parallaxes are in units of milliarcseconds), and plot a Hertzsprung-Russell diagram. The x-coordinate of the diagram is the color, obtained from substracting the magnitudes on the BP and RP filters. As lower magnitudes imply higher flux, sources to the left of the diagram have a bluer spectrum. We also include in here the location of the Sun using the values provided by [CasagrandeVandenBerg2018].","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"# Plot a color-magnitude diagram with Gaia data\ngaia_data = CSV.read(\"assets/gaia_100pc_par_over_err_100.csv\", header=1, DataFrame)\n\nplot(xlabel=L\"$m_{BP}-m_{RP}$\", ylabel=\"Absolute G magnitude\")\ncolor = gaia_data.phot_bp_mean_mag - gaia_data.phot_rp_mean_mag\ndistance_pc = 1 ./ (1e-3.*gaia_data.parallax)\nabs_G = gaia_data.phot_g_mean_mag .- 5 .* (log10.(distance_pc).-1)\n\n# Solar absolute magnitudes from Casagrande & VandenBerg (2018)\nG_sun = 4.67\nBP_sun = G_sun+0.33\nRP_sun = G_sun-0.49\n\nscatter!(color, abs_G,label=\"Gaia\")\nscatter!([BP_sun-RP_sun],[G_sun], label=\"Sun\")\nyflip!(true)","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"A lot of interesting structure comes right out of this figure. We have that most stars live in a narrow band which crosses the figure diagonally. This band is the main-sequence, and is populated by core-hydrogen burning stars. On the lower left of the diagram we see an additional band of stars, which are much fainter for a given color. These stars correspond to white dwarfs. Finally, and not so apparent, on the upper left of the main sequence there are a few objects which diverge to higher luminosities than the main sequence. These are stars on their red-giant branch. We will go through all of these types of stars later in this course.","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"Next up, we want to turn this into a theoretical Hertzprung-Russell diagram which shows the effective temperature T_mathrmeff versus the luminosity. For this we need to know how to transform the color into an effective temperature, and how to determine the luminosity of a star with a given absolute G band magnitude and color. We will start with the mapping from color to effective temperature. In all of this we will assume all stars radiate as black bodies with an unkown temperature. For a source with a temperature T_mathrmeff we can compute the magnitude in each band as","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"m_BP=-25log_10 F_BP + m_0BPquad m_RP=-25log_10 F_RP + m_0RP","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"where the fluxes on each band are obtained by integrating a black body spectrum with the corresponding passband (varphi_BP(lambda) or varphi_RP(lambda)) that were plotted earlier:","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"F_BP = Cint_0^infty B_lambda(lambdaT) varphi_BP(lambda) dlambdaquad F_RP=Cint_0^infty B_lambda(lambdaT) varphi_RP(lambda) dlambda quad C=pi left(fracRdright)^2","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"The two zero-points m_0BP and m_0RP form part of the definition of the photometric system. Taking the difference between the magnitudes we obtain the color,","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"m_BP-m_RP = -25 log_10left(fracint_0^infty B_lambda(lambdaT) varphi_BP(lambda) dlambdaint_0^infty B_lambda(lambdaT) varphi_RP(lambda) dlambdaright) + m_0BP - m_0RP","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"(zero_point1)","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"Taking the absolute magnitude of the Sun in the BP and RP bands, and assuming it radiates as a black body with T=5772mathrmK, the difference between the zero-points can be expressed as (it does not make a difference if we use the absolute or apparent magnitude of the Sun here)","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"m_0BP - m_0RP= M_BPodot-M_RPodot + 25 log_10left(fracint_0^infty B_lambda(lambda5772mathrmK) varphi_BP(lambda) dlambdaint_0^infty B_lambda(lambda5772mathrmK) varphi_RP(lambda) dlambdaright)","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"(zero_point2)","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"Although we are getting the difference in the zero points by using an approximation of the Sun as a black body, a more formal approach would be to use the definition of the zero point of the GAIA photometric system, which uses the VEGAMAG system. In this system the zero points are set such that one particular star, Vega, has a magnitude of zero in all bands (or more specifally, a particular spectral model of Vega satisfies that). However, for this exercise, Vega is not ideal to use because it is a rapidly rotating star which cannot be well approximated with a blackbody spectrum. For details on this, you can check the section on external calibration from the documentation of the third Gaia data release {cite}vanLeeuwen+2022.","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"Combining equations {eq}zero_point1 and {eq}zero_point2 we can infer the color m_BP-m_RP of a source as a function of T_mathrmeff. This is illustrated below.","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"function flux_ratio_BP_RP(T)\n    #Ignoring constant in the integration as we just care about the ratio, relying on bins being equally spaced in lambda\n    F_sun_BP = sum(passbands.BP_pb .* B_Œª.(passbands.lambda,T))\n    F_sun_RP = sum(passbands.RP_pb .* B_Œª.(passbands.lambda,T))\n    return F_sun_BP/F_sun_RP\nend\n\ndiff_zero_point_BP_RP = BP_sun - RP_sun + 2.5*log10(flux_ratio_BP_RP(5772))","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"sample","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"log10_T_sample = LinRange(3.0,6.0,100)\nBP_sub_RP = -2.5*log10.(flux_ratio_BP_RP.(10 .^ log10_T_sample)) .+ diff_zero_point_BP_RP\n\nplot(xlabel=L\"$log_{10} T_\\mathrm{eff}$\",ylabel=L\"$m_\\mathrm{BP}-m_\\mathrm{RP}$\")\nplot!(log10_T_sample, BP_sub_RP,label=\"\")","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"Now, on our quest to turn the Gaia Hertzsprung-Russell diagram into one of effective temperature versus luminosity, we run into a small problem. We have found a way to get a color from an effective temperature but what we need is the inverse! The inverse function can be computed numerically using a bisection algorithm. From the plot above we see that the relationship between temperature and color is monotonic. If we have an upper and a lower bound on the temperature that corresponds to a given color, we can iteratively improve on these bounds by taking their average and seeing if this new value corresponds to an upper or a lower bound. This can be iterated upon until the upper and lower bounds are close enough (down to a specific tolerance). The function below implements such a bisection solver.","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"# bisection algorithm to get Teff from the color BP-RP\nfunction log10_T_from_BP_minus_RP(BP_minus_RP)\n    log10_T_min = 3.0 # lower bound\n    log10_T_max = 6.0 # upper bound\n    log10_T = 0.0 # initialize at an arbitrary value\n    while abs(log10_T_min-log10_T_max) > 0.001 # Iterate until we reach this tolerance\n        #bisect bounds\n        log10_T = 0.5*(log10_T_max + log10_T_min)\n        #evaluate the color that corresponds to this temperature\n        BP_minus_RP_new = -2.5*log10.(flux_ratio_BP_RP(10^log10_T)) .+ diff_zero_point_BP_RP\n\n        #Determine if the new value for log10_T is an upper or lower bound.\n        #This relies on BP-RP decreasing monotonically with temperature\n        if BP_minus_RP_new > BP_minus_RP # T too low, update lower limit\n            log10_T_min = log10_T\n        else #otherwise, update upper limit\n            log10_T_max = log10_T\n        end\n    end\n    return log10_T\nend;\n# we use the function defined above to compute log10_Teff for all our Gaia sources\nlog10_T = log10_T_from_BP_minus_RP.(color); #remember that color is defined as BP-RP\nnothing #hide","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"We can make use of this to make a T_mathrmeff versus absolute G magnitude diagram.","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"plot(xlabel=L\"$\\log_{10}T_\\mathrm{eff}$\", ylabel=\"Absolute G magnitude\")\nscatter!(log10_T, abs_G,label=\"Gaia\")\nscatter!([log10_T_from_BP_minus_RP(BP_sun-RP_sun)],[G_sun],label=\"Sun\")\nyflip!(true)\nxflip!(true)","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"We're almost there, just need to turn the y-axis into a luminosity! To do this, we first compute the ratio of flux in the G band versus the total flux for a source at a given temperature. Since we have that F_lambda = pi B_lambda and F=sigma T^4 we find:","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"R(T)equivfracF_GF=fracpisigma T^4int_0^infty B_lambda(lambda T) varphi_G(lambda)dlambda","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"Below we illustrate this ratio as a function of temperature.","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"function flux_ratio_G_total(T)\n    #This numerical integration relies on bins being spaced by a nanometer in the passband data\n    F_G = œÄ*sum(passbands.G_pb .* B_Œª.(passbands.lambda,T) .*1e-7)\n    return F_G/(œÉ*T^4)\nend\n\nplot(xlabel=L\"$log_{10} T_\\mathrm{eff}$\",ylabel=L\"$F_\\mathrm{G}/F$\", yscale=:log, ylims=[1e-4,1], legend=false)\nplot!(log10_T_sample, flux_ratio_G_total.(10 .^ log10_T_sample)) # log10_T_sample is an array defined previously, and goes from log10(T)=3 to 6","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"As can be seen, if the temperature is pushed to very low or very high values we only capture a miniscule amount of the total light. This means that we have little information on the total luminosity and we can expect issues to appear when trying to convert from a G band magnitude to a total bolometric luminosity.","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"And now for the last step, how do we use this to convert from an absolute G magnitude to the bolometric luminosity? If we substract the absolute G magnitude of the Sun to that of another star we obtain","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"M_G - M_Godot = -25 log_10left(fracL_GL_Godotright)","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"(absG1)","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"where L_G stands for the luminosity of the star weighted by the G filter passband,","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"L_G=int_0^infty L_lambda varphi(lambda)dlambda","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"and L_lambda is the luminosity per unit wavelength. Equation {eq}abs_G_1 can be rewritten as","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"M_G - M_Godot = -25timesleftlog_10left(fracL_GLright)+log_10left(fracLL_odotright)+log_10left(fracL_odotL_Godotright)right","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"The ratio between the luminosity of a source and its G band is just the quantity R(T) we have computed before. Using the corresponding temperature for the Sun and solving for log_10(LL_odot) we get","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"log_10left(fracLL_odotright)=fracM_Godot-M_G25 - log_10(R(T)) + log_10(R(5772mathrmK))","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"and remember that the temperature can be inferred from the color. With this we can complete our Hertzsprung-Russell diagram. As a check, we also include the predicted properties for stars on the zero-age main-sequence, which is the beginning of the core-hydrogen burning phase in the evolution of a star. These values of L and T_mathrmeff come from the results of {cite}Schaller+1992 and {cite}Charbonnel+1999 and cover masses between 04 M_odot and 25 M_odot.","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"log10_L_div_Lsun = (G_sun .- abs_G)./(2.5) .-\n    log10.(flux_ratio_G_total.(10 .^ log10_T)) .+ log10.(flux_ratio_G_total.(5772));\n\nplot(xlabel=L\"$\\log_{10}T_\\mathrm{eff}$\", ylabel=L\"\\log_{10}L/L_\\odot\")\n\n#Predicted Zero-age main-sequence location for stars of masses (in Msun):\n#0.4, 0.8, 0.9, 1.0, 1.25, 1.5, 1.7, 2, 2.5\n#All models except that with M=0.4 Msun are from Schaller et al. (1992).\n#Model at 0.4 Msun is from Charbonnel et al. (1999).\n#These results were computed using the Geneva stellar evolution code\nlog10_T_geneva = [3.568, 3.687, 3.724, 3.751, 3.808, 3.852, 3.901, 3.958, 4.031]\nlog10_L_geneva = [-1.63, -0.612, -0.394, -0.163, 0.325, 0.676, 0.916, 1.209, 1.600]\n\nscatter!(log10_T, log10_L_div_Lsun, label=\"Gaia\")\nscatter!([log10_T_from_BP_minus_RP(BP_sun-RP_sun)],[0], label=\"Sun\")\nplot!(log10_T_geneva, log10_L_geneva, linewidth=5, linestyle= :dot, color=\"orange\", label=\"ZAMS\")\nxflip!(true)","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"Here we see that the predicted zero-age main-sequence matches well the observed stars except at low luminosities and effective temperatures. This is not entirely surprising, as for those low temperatures we have already seen that the Gaia filters only cover a small fraction of the total luminosity of the star.","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"Feel free to further play with this data. For instance, using L=4pi R^2sigma T_mathrmeff^4 you can determine the radii of these stars, and compare how much the radii in the main-sequence differ from those of the white dwarfs.","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"[CasagrandeVandenBerg2018]: Monthly Notices of the Royal Astronomical Society: Letters, Volume 479, Issue 1, p.L102-L107 https://ui.adsabs.harvard.edu/abs/2018MNRAS.479L.102C/abstract","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"","category":"page"},{"location":"1_introduction_computational/","page":"Constructing an HR diagram","title":"Constructing an HR diagram","text":"This page was generated using Literate.jl.","category":"page"},{"location":"1_introduction/#Introduction","page":"Notes","title":"Introduction","text":"","category":"section"},{"location":"1_introduction/","page":"Notes","title":"Notes","text":"hello","category":"page"}]
}
